<nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
        <a class="navbar-brand" href="{{ path('app_home') }}">
            <i class="fas fa-city me-2"></i> CityFlow B√©nin
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain" aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarMain">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link {{ app.request.get('_route') == 'app_home' ? 'active' : '' }}" href="{{ path('app_home') }}">
                        <i class="fas fa-home me-1"></i> Accueil
                    </a>
                </li>

                {# Liens pour tous les utilisateurs connect√©s (valid√©s OU mod√©rateurs/admins) #}
                {% if app.user and (app.user.estValide or is_granted('ROLE_MODERATOR')) %}
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') == 'app_carte' ? 'active' : '' }}" href="{{ path('app_carte') }}">
                            <i class="fas fa-map me-1"></i> Carte
                        </a>
                    </li>

                    {# Menu Signalements avec sous-menu #}
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle {{ app.request.get('_route') starts with 'app_signalement' ? 'active' : '' }}"
                           href="#" id="navbarDropdownSignalements" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-exclamation-triangle me-1"></i> Signalements
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownSignalements">
                            <li><a class="dropdown-item" href="{{ path('app_signalements') }}">
                                    <i class="fas fa-list me-2"></i> Consulter les signalements
                                </a></li>
                            {% if app.user.estValide %}
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="{{ path('app_signalement_nouveau') }}">
                                        <i class="fas fa-plus-circle me-2"></i> Signaler un probl√®me
                                    </a></li>
                                <li><a class="dropdown-item" href="{{ path('app_mes_signalements') }}">
                                        <i class="fas fa-user-check me-2"></i> Mes signalements
                                    </a></li>
                            {% endif %}
                        </ul>
                    </li>

                    {# Section des notifications - CONNECT√âE √Ä VOTRE API #}
                    {% if app.user.estValide %}
                        <li class="nav-item dropdown notifications-dropdown">
                            <a class="nav-link dropdown-toggle position-relative" href="#" id="notificationDropdown"
                               role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-bell"></i>
                                <span class="notification-badge" id="notificationBadge" style="display: none;">0</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationDropdown">
                                <li class="dropdown-header d-flex justify-content-between align-items-center">
                                    <span><i class="fas fa-bell me-2"></i>Notifications</span>
                                    <button class="btn btn-sm btn-dark p-1 px-2" id="markAllRead" title="Marquer toutes comme lues" style="font-size: 0.7rem;">
                                        <i class="fas fa-check-double me-1"></i>Tout lire
                                    </button>
                                </li>
                                <li><hr class="dropdown-divider"></li>

                                <!-- Liste des notifications -->
                                <div id="notificationsList" style="max-height: 300px; overflow-y: auto;">
                                    <div class="dropdown-item text-center py-3">
                                        <div class="spinner-border spinner-border-sm text-dark" role="status">
                                            <span class="visually-hidden">Chargement...</span>
                                        </div>
                                        <div class="mt-2 small text-muted">Chargement des notifications...</div>
                                    </div>
                                </div>

                                <!-- √âtat vide -->
                                <div id="emptyNotifications" class="dropdown-item text-center py-4" style="display: none;">
                                    <i class="fas fa-bell-slash text-muted fa-2x mb-2"></i>
                                    <div class="small text-muted">Aucune notification</div>
                                </div>

                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <a class="dropdown-item text-center" href="{{ path('app_notifications_index') }}">
                                        <i class="fas fa-list me-2"></i>
                                        <small>Voir toutes les notifications</small>
                                    </a>
                                </li>
                            </ul>
                        </li>
                    {% endif %}

                    {# Menu Messages (seulement pour utilisateurs valid√©s) #}
                    {% if app.user.estValide %}
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle position-relative {{ app.request.get('_route') starts with 'app_message' ? 'active' : '' }}"
                               href="#" id="navbarDropdownMessages" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-envelope me-1"></i> Messages
                                <span id="messagesBadge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger d-none">
                                    <span id="messagesCount">0</span>
                                    <span class="visually-hidden">messages non lus</span>
                                </span>
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMessages">
                                <li><a class="dropdown-item" href="{{ path('app_messages_inbox') }}">
                                        <i class="fas fa-inbox me-2"></i> Bo√Æte de r√©ception
                                    </a></li>
                                <li><a class="dropdown-item" href="{{ path('app_messages_sent') }}">
                                        <i class="fas fa-paper-plane me-2"></i> Messages envoy√©s
                                    </a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="{{ path('app_message_new') }}">
                                        <i class="fas fa-edit me-2"></i> Nouveau message
                                    </a></li>
                            </ul>
                        </li>
                    {% endif %}

                    {# Menu Gestion/Mod√©ration - AM√âLIOR√â avec les nouvelles routes #}
                    {% if is_granted('ROLE_MODERATOR') %}
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle {{ app.request.get('_route') starts with 'app_validation' or app.request.get('_route') starts with 'app_reparation' or app.request.get('_route') starts with 'app_admin' or app.request.get('_route') starts with 'app_moderateur' ? 'active' : '' }}"
                               href="#" id="navbarDropdownGestion" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                {% if is_granted('ROLE_ADMIN') %}
                                    <i class="fas fa-cogs me-1"></i> Gestion
                                {% else %}
                                    <i class="fas fa-gavel me-1"></i> Mod√©ration
                                {% endif %}
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownGestion">
                                {# üéØ Dashboard Mod√©ration - NOUVELLES ROUTES #}
                                <li><h6 class="dropdown-header">
                                        <i class="fas fa-tachometer-alt me-2"></i>Dashboard Mod√©ration
                                    </h6></li>
                                <li><a class="dropdown-item" href="{{ path('app_moderateur_dashboard') }}">
                                        <i class="fas fa-chart-line me-2"></i> Vue d'ensemble
                                    </a></li>
                                <li><a class="dropdown-item" href="{{ path('app_moderateur_statistiques') }}">
                                        <i class="fas fa-chart-bar me-2"></i> Mes statistiques
                                    </a></li>

                                {# Section Validation - NOUVELLES ROUTES #}
                                <li><hr class="dropdown-divider"></li>
                                <li><h6 class="dropdown-header">
                                        <i class="fas fa-check-circle me-2"></i>Validation
                                    </h6></li>
                                <li><a class="dropdown-item" href="{{ path('app_moderateur_validation') }}">
                                        <i class="fas fa-clock me-2"></i> Signalements en attente
                                    </a></li>
                                <li><a class="dropdown-item" href="{{ path('app_moderateur_signalements') }}">
                                        <i class="fas fa-list-check me-2"></i> Tous les signalements
                                    </a></li>
                                <li><a class="dropdown-item" href="{{ path('app_moderateur_journal') }}">
                                        <i class="fas fa-history me-2"></i> Mon journal d'activit√©
                                    </a></li>

                                {# Section R√©parations (routes existantes) #}
                                <li><hr class="dropdown-divider"></li>
                                <li><h6 class="dropdown-header">
                                        <i class="fas fa-tools me-2"></i>R√©parations
                                    </h6></li>
                                <li><a class="dropdown-item" href="{{ path('app_reparations') }}">
                                        <i class="fas fa-wrench me-2"></i> Gestion des r√©parations
                                    </a></li>

                                {# Section Administration (seulement pour les admins) #}
                                {% if is_granted('ROLE_ADMIN') %}
                                    <li><hr class="dropdown-divider"></li>
                                    <li><h6 class="dropdown-header">
                                            <i class="fas fa-shield-alt me-2"></i>Administration
                                        </h6></li>
                                    <li><a class="dropdown-item" href="{{ path('app_admin_dashboard') }}">
                                            <i class="fas fa-tachometer-alt me-2"></i> Dashboard Admin
                                        </a></li>
                                    <li><a class="dropdown-item" href="{{ path('app_admin_users') }}">
                                            <i class="fas fa-users me-2"></i> Utilisateurs
                                        </a></li>
                                    <li><a class="dropdown-item" href="{{ path('app_admin_signalements') }}">
                                            <i class="fas fa-database me-2"></i> Base de donn√©es signalements
                                        </a></li>
                                    <li><a class="dropdown-item" href="{{ path('app_admin_demandes_suppression') }}">
                                            <i class="fas fa-trash-alt me-2"></i> Demandes de suppression
                                        </a></li>
                                    <li><a class="dropdown-item" href="{{ path('app_admin_statistiques') }}">
                                            <i class="fas fa-chart-pie me-2"></i> Statistiques globales
                                        </a></li>

                                    {# Section d√©veloppement (visible uniquement en mode dev) #}
                                    {% if app.environment == 'dev' %}
                                        <li><hr class="dropdown-divider"></li>
                                        <li><h6 class="dropdown-header">
                                                <i class="fas fa-code me-2"></i>D√©veloppement
                                            </h6></li>
                                        <li><a class="dropdown-item" href="#">
                                                <i class="fas fa-bug me-2"></i> Test notifications
                                            </a></li>
                                    {% endif %}
                                {% endif %}
                            </ul>
                        </li>
                    {% endif %}
                {% endif %}
            </ul>

            {# Partie droite de la navbar - Utilisateur connect√© ou connexion #}
            <ul class="navbar-nav">
                {% if app.user %}
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUser" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-user-circle me-1"></i>
                            {{ app.user.prenom }} {{ app.user.nom }}
                            {% if not app.user.estValide and not is_granted('ROLE_MODERATOR') %}
                                <span class="badge bg-warning ms-1">En attente</span>
                            {% endif %}
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownUser">
                            <li><a class="dropdown-item" href="{{ path('app_profil_show') }}">
                                    <i class="fas fa-user me-2"></i> Mon profil
                                </a></li>
                            <li><a class="dropdown-item" href="{{ path('app_profil_edit') }}">
                                    <i class="fas fa-edit me-2"></i> Modifier profil
                                </a></li>

                            {# Liens sp√©cifiques aux mod√©rateurs/admins #}
                            {% if is_granted('ROLE_MODERATOR') %}
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="{{ path('app_moderateur_dashboard') }}">
                                        <i class="fas fa-tachometer-alt me-2"></i> Dashboard Mod√©ration
                                    </a></li>
                            {% endif %}

                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="{{ path('app_logout') }}">
                                    <i class="fas fa-sign-out-alt me-2"></i> D√©connexion
                                </a></li>
                        </ul>
                    </li>
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_login') }}">
                            <i class="fas fa-sign-in-alt me-1"></i> Connexion
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_register') }}">
                            <i class="fas fa-user-plus me-1"></i> Inscription
                        </a>
                    </li>
                {% endif %}
            </ul>
        </div>
    </div>
</nav>

{# Styles sp√©cifiques pour les notifications avec th√®me noir #}
{% if app.user and app.user.estValide %}
    <style>
        .notifications-dropdown .dropdown-menu {
            width: 350px;
            border: none;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            border-radius: 12px;
        }

        .notification-item {
            border-bottom: 1px solid #f1f1f1;
            padding: 12px 16px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .notification-item:hover {
            background-color: #f8f9fa;
            transform: translateX(2px);
        }

        .notification-item:last-child {
            border-bottom: none;
        }

        .notification-item.non_lue {
            background-color: rgba(33, 37, 41, 0.05);
            border-left: 3px solid #212529;
        }

        .notification-item.lue {
            opacity: 0.8;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: #dc3545;
            color: white;
            border-radius: 50%;
            padding: 2px 6px;
            font-size: 0.7rem;
            min-width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 2px solid white;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .notification-actions .mark-read-btn {
            border-radius: 50%;
            width: 24px;
            height: 24px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #212529;
            border-color: #212529;
            color: white;
            font-size: 0.7rem;
        }

        .notification-actions .mark-read-btn:hover {
            background-color: #343a40;
            border-color: #343a40;
            transform: scale(1.1);
        }

        .dropdown-header {
            background-color: #f8f9fa;
            padding: 12px 16px;
            margin-bottom: 0;
            border-radius: 12px 12px 0 0;
        }

        .notification-type-icon {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
            margin-right: 10px;
        }

        .notification-type-validation {
            background-color: #28a745;
            color: white;
        }

        .notification-type-commentaire {
            background-color: #17a2b8;
            color: white;
        }

        .notification-type-statut_change {
            background-color: #ffc107;
            color: #212529;
        }

        .notification-type-rejet {
            background-color: #dc3545;
            color: white;
        }
    </style>

    {# JavaScript pour les notifications - CONNECT√â √Ä VOTRE API #}
    <script>
        // üîß Configuration des URLs c√¥t√© JavaScript
        const NOTIFICATIONS_URLS = {
            api: '{{ path('app_notifications_api') }}',
            markRead: '{{ path('app_notification_marquer_lue', {'id': 'NOTIFICATION_ID'}) }}',
            markAllRead: '{{ path('app_notifications_marquer_toutes_lues') }}',
            signalementShow: '{{ path('app_signalements') }}' // Base URL pour les signalements
        };

        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser les notifications
            loadNotifications();

            // V√©rifier les nouvelles notifications toutes les 30 secondes
            setInterval(loadNotifications, 30000);

            // Gestionnaire pour marquer toutes comme lues
            document.getElementById('markAllRead').addEventListener('click', function(e) {
                e.preventDefault();
                markAllNotificationsAsRead();
            });
        });

        // üîó CONNECT√â √Ä VOTRE API
        function loadNotifications() {
            fetch(NOTIFICATIONS_URLS.api, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    updateNotificationsList(data.notifications);
                    updateNotificationBadge(data.nombreNonLues);
                })
                .catch(error => {
                    console.error('Erreur chargement notifications:', error);
                    // En cas d'erreur, cacher le loading et afficher √©tat vide
                    document.getElementById('notificationsList').style.display = 'none';
                    document.getElementById('emptyNotifications').style.display = 'block';
                });
        }

        function updateNotificationsList(notifications) {
            const container = document.getElementById('notificationsList');
            const emptyState = document.getElementById('emptyNotifications');

            if (notifications.length === 0) {
                container.style.display = 'none';
                emptyState.style.display = 'block';
                return;
            }

            container.style.display = 'block';
            emptyState.style.display = 'none';

            container.innerHTML = notifications.slice(0, 5).map(notification =>
                createNotificationHTML(notification)
            ).join('');

            // Ajouter les √©v√©nements
            addNotificationEvents();
        }

        function createNotificationHTML(notification) {
            const typeIcons = {
                validation: '<i class="fas fa-check-circle"></i>',
                rejet: '<i class="fas fa-times-circle"></i>',
                commentaire: '<i class="fas fa-comment"></i>',
                statut_change: '<i class="fas fa-sync"></i>',
                urgent: '<i class="fas fa-exclamation-triangle"></i>',
                information: '<i class="fas fa-info-circle"></i>'
            };

            return `
            <div class="dropdown-item notification-item ${notification.isLue ? 'lue' : 'non_lue'}"
                 data-id="${notification.id}" data-signalement="${notification.signalementId || ''}">
                <div class="d-flex align-items-start">
                    <div class="notification-type-icon notification-type-${notification.type}">
                        ${typeIcons[notification.type] || notification.typeIcon}
                    </div>
                    <div class="flex-grow-1">
                        <p class="mb-1 small fw-medium">${notification.message}</p>
                        <small class="text-muted">${notification.dateRelative}</small>
                    </div>
                    <div class="notification-actions">
                        ${!notification.isLue ? `
                            <button class="btn btn-sm mark-read-btn"
                                    data-id="${notification.id}"
                                    title="Marquer comme lu"
                                    onclick="markAsRead(${notification.id}, event)">
                                <i class="fas fa-check"></i>
                            </button>
                        ` : ''}
                    </div>
                </div>
            </div>
        `;
        }

        function addNotificationEvents() {
            // Redirection vers signalement
            document.querySelectorAll('.notification-item').forEach(item => {
                item.addEventListener('click', function(e) {
                    if (!e.target.closest('.mark-read-btn')) {
                        const signalementId = this.dataset.signalement;
                        if (signalementId) {
                            // Marquer comme lue automatiquement
                            const notifId = this.dataset.id;
                            markAsRead(notifId, null, false);
                            // Rediriger - Construction manuelle de l'URL
                            window.location.href = `/signalements/${signalementId}`;
                        }
                    }
                });
            });
        }

        function updateNotificationBadge(count) {
            const badge = document.getElementById('notificationBadge');
            if (badge) {
                if (count > 0) {
                    badge.textContent = count > 99 ? '99+' : count;
                    badge.style.display = 'flex';
                } else {
                    badge.style.display = 'none';
                }
            }
        }

        // üîó CONNECT√â √Ä VOTRE API
        function markAsRead(notificationId, event, showAnimation = true) {
            if (event) {
                event.stopPropagation();
            }

            // Animation de feedback
            let button = null;
            if (event && showAnimation) {
                button = event.target.closest('.mark-read-btn');
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                button.disabled = true;
            }

            // Construction manuelle de l'URL pour √©viter le probl√®me Twig
            const url = NOTIFICATIONS_URLS.markRead.replace('NOTIFICATION_ID', notificationId);

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const notificationItem = document.querySelector(`[data-id="${notificationId}"]`);
                        if (notificationItem) {
                            notificationItem.classList.remove('non_lue');
                            notificationItem.classList.add('lue');
                            if (button) button.remove();

                            // Mettre √† jour le badge
                            const currentBadge = document.getElementById('notificationBadge');
                            const currentCount = parseInt(currentBadge.textContent) || 0;
                            updateNotificationBadge(Math.max(0, currentCount - 1));
                        }
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    if (button) {
                        button.innerHTML = '<i class="fas fa-check"></i>';
                        button.disabled = false;
                    }
                });
        }

        // üîó CONNECT√â √Ä VOTRE API
        function markAllNotificationsAsRead() {
            const markAllBtn = document.getElementById('markAllRead');
            const originalText = markAllBtn.innerHTML;
            markAllBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Chargement...';
            markAllBtn.disabled = true;

            fetch(NOTIFICATIONS_URLS.markAllRead, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Marquer visuellement toutes comme lues
                        const unreadItems = document.querySelectorAll('.notification-item.non_lue');
                        unreadItems.forEach(item => {
                            item.classList.remove('non_lue');
                            item.classList.add('lue');
                            const button = item.querySelector('.mark-read-btn');
                            if (button) button.remove();
                        });

                        updateNotificationBadge(0);

                        // Animation de confirmation
                        markAllBtn.innerHTML = '<i class="fas fa-check me-1"></i>Fait !';
                        setTimeout(() => {
                            markAllBtn.innerHTML = originalText;
                            markAllBtn.disabled = false;
                        }, 2000);
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    markAllBtn.innerHTML = originalText;
                    markAllBtn.disabled = false;
                });
        }

        // Fonction pour v√©rifier les nouveaux messages (conserv√©e de l'original)
        function checkNewMessages() {
            // Cette fonction peut √™tre impl√©ment√©e pour v√©rifier les nouveaux messages via AJAX
            // et mettre √† jour le badge de notification
        }

        // V√©rifier les nouveaux messages toutes les 30 secondes (conserv√© de l'original)
        setInterval(checkNewMessages, 30000);
    </script>
{% endif %}